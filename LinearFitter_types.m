function T = LinearFitter_types(dt)
    switch dt
        case 'double'
            T.x = double([]);
            T.y = double([]);
            T.z = double([]);
            T.l = double([]);
            T.s = double([]);
            T.rphix = double([]);
            T.rphixy = double([]);
            T.rphixx = double([]);
            T.rphiy = double([]);
            T.rzx = double([]);
            T.rzxy = double([]);
            T.rzxx = double([]);
            T.rzy = double([]);
            T.RPhiPos = double([]);
            T.PhiPos = double([]);
            T.RZPos = double([]);
            T.ZPos = double([]);
            T.qOverPt = double([]);
            T.phiT = double([]);
            T.cotT = double([]);
            T.zT = double([]);
            T.rphiden = double([]);
            T.rzden = double([]);
            T.phiResid = double([]);
            T.zResid = double([]);
            T.phiLargest = double([]);
            T.zLargest = double([]);
            T.phizResid = double([]);
            T.phizLargest = double([]);
        case 'single'
            T.x = single([]);
            T.y = single([]);
            T.z = single([]);
            T.l = single([]);
            T.s = single([]);
            T.rphix = single([]);
            T.rphixy = single([]);
            T.rphixx = single([]);
            T.rphiy = single([]);
            T.rzx = single([]);
            T.rzxy = single([]);
            T.rzxx = single([]);
            T.rzy = single([]);
            T.RPhiPos = single([]);
            T.PhiPos = single([]);
            T.RZPos = single([]);
            T.ZPos = single([]);
            T.qOverPt = single([]);
            T.phiT = single([]);
            T.cotT = single([]);
            T.zT = single([]);
            T.rphiden = single([]);
            T.rzden = single([]);
            T.phiResid = single([]);
            T.zResid = single([]);
            T.phiLargest = single([]);
            T.zLargest = single([]);
            T.phizReis = single([]);
            T.phizResid = single([]);
            T.phizLargest = single([]);
        case 'fixed'
            F = fimath('RoundingMethod', 'Floor', ...
                'OverflowAction', 'Wrap', ...
                'ProductMode', 'KeepLSB', ...
                'ProductWordLength', 18, ...
                'SumMode', 'KeepLSB', ...
                'SumWordLength', 18, ...
                'CastBeforeSum', true);
            T.x = fi([],1,12,4,F);
            T.y = fi([],1,14,11,F);
            T.z = fi([],1,14,4,F);
            T.l = fi([],0,3,0,F);
            T.s = fi([],0,5,0,F);
            T.rphix = fi([],1,18,8,F);
            T.rphixy = fi([],1,18,7,F);
            T.rphixx = fi([],1,18,1,F);
            T.rphiy = fi([],1,18,13,F);
            T.rzx = fi([],1,18,8,F);
            T.rzxy = fi([],1,18,0,F);
            T.rzxx = fi([],1,18,1,F);
            T.rzy = fi([],1,18,6,F);
            T.RPhiPos = fi([],1,13,3,F);
            T.PhiPos = fi([],1,14,10,F);
            T.RZPos = fi([],1,13,3,F);
            T.ZPos = fi([],1,14,3,F);
            T.qOverPt = fi([],1,12,8,F);
            T.phiT = fi([],1,14,8,F);
            T.cotT = fi([],1,14,8,F);
            T.zT = fi([],1,12,10,F);
            T.rphiden = fi([],1,18,1,F);
            T.rzden = fi([],1,18,1,F);
            T.phiResid = fi([],0,18,18,F);
            T.zResid = fi([],0,18,11,F);
            T.phiLargest = fi([],0,18,17,F);
            T.zLargest = fi([],0,18,11,F);
            T.phizResid = fi([],0,18,18,F);
            T.phizResid = fi([],0,18,11,F);
            T.phizLargest = fi([],0,18,11,F);
        case 'scaled'
            T.x = fi([],1,12,4,'DataType','ScaledDouble');
            T.y = fi([],1,14,11,'DataType','ScaledDouble');
            T.z = fi([],1,14,4,'DataType','ScaledDouble');
            T.l = fi([],0,3,0,'DataType','ScaledDouble');
            T.s = fi([],0,5,0,'DataType','ScaledDouble');
            T.rphix = fi([],1,18,8,'DataType','ScaledDouble');
            T.rphixy = fi([],1,18,7,'DataType','ScaledDouble');
            T.rphixx = fi([],1,18,1,'DataType','ScaledDouble');
            T.rphiy = fi([],1,18,13,'DataType','ScaledDouble');
            T.rzx = fi([],1,18,8,'DataType','ScaledDouble');
            T.rzxy = fi([],1,18,0,'DataType','ScaledDouble');
            T.rzxx = fi([],1,18,1,'DataType','ScaledDouble');
            T.rzy = fi([],1,18,6,'DataType','ScaledDouble');
            T.RPhiPos = fi([],1,13,3,'DataType','ScaledDouble');
            T.PhiPos = fi([],1,14,10,'DataType','ScaledDouble');
            T.RZPos = fi([],1,13,3,'DataType','ScaledDouble');
            T.ZPos = fi([],1,14,3,'DataType','ScaledDouble');
            T.qOverPt = fi([],1,12,8,'DataType','ScaledDouble');
            T.phiT = fi([],1,14,8,'DataType','ScaledDouble');
            T.cotT = fi([],1,14,8,'DataType','ScaledDouble');
            T.zT = fi([],1,12,10,'DataType','ScaledDouble');
            T.rphiden = fi([],1,18,1,'DataType','ScaledDouble');
            T.rzden = fi([],1,18,1,'DataType','ScaledDouble');
            T.phiResid = fi([],0,18,17,'DataType','ScaledDouble');
            T.zResid = fi([],0,18,11,'DataType','ScaledDouble');
            T.phiLargest = fi([],0,18,17,'DataType','ScaledDouble');
            T.zLargest = fi([],0,18,11,'DataType','ScaledDouble');
            T.phizResid = fi([],0,18,11,'DataType','ScaledDouble');
            T.phizLargest = fi([],0,18,11,'DataType','ScaledDouble');
    end
end